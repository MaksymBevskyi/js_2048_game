{"version":3,"sources":["scripts/main.js"],"names":["WINNER_SCORE","ARROW","LEFT","RIGHT","UP","DOWN","messageStart","document","querySelector","messageLose","messageWin","button","score","board","rows","columns","scoreCount","won","initialBoard","map","row","isInitialSetup","addEventListener","restartGame","table","setGame","r","cells","querySelectorAll","c","cell","setAttribute","number","updateCell","setCell","hasEmptyCell","some","loseGame","clearBoard","getElementById","innerText","classList","value","add","innerHTML","found","Math","random","floor","column","remove","arrow","preventDefault","key","slideLeft","slideRight","slideUp","slideDown","filterZero","filter","num","slide","initialRow","i","length","push","slideHorizontal","direction","newRow","reverse","hasChanges","arrayA","arrayB","j","removeEventListener","replace"],"mappings":"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","file":"main.3972503b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst WINNER_SCORE = 2048;\nconst ARROW = {\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n};\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\n\nconst board = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\nconst rows = 4;\nconst columns = 4;\nlet scoreCount = 0;\nlet won = false;\nconst initialBoard = board.map(row => [...row]);\nlet isInitialSetup = true;\n\nbutton.addEventListener('click', restartGame);\n\nconst table = document.querySelector('.game-field');\n\nconst setGame = () => {\n  for (let r = 0; r < rows; r++) {\n    const row = table.querySelectorAll('.field-row')[r];\n    const cells = row.querySelectorAll('.field-cell');\n\n    for (let c = 0; c < columns; c++) {\n      const cell = cells[c];\n\n      cell.setAttribute('id', `row_${r}-column_${c}`);\n\n      const number = board[r][c];\n\n      updateCell(cell, number);\n    }\n  }\n  setCell();\n  setCell();\n};\n\nconst hasEmptyCell = () => {\n  return board.some(row => row.some(cell => cell === 0));\n};\n\nconst loseGame = () => {\n  if (hasEmptyCell()) {\n    return false;\n  }\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < rows; c++) {\n      if (board[r][c] === board[r][c + 1]) {\n        return false;\n      }\n    }\n  }\n\n  for (let r = 0; r < rows - 1; r++) {\n    for (let c = 0; c < rows; c++) {\n      if (board[r][c] === board[r + 1][c]) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nconst clearBoard = () => {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(`row_${r}-column_${c}`);\n\n      board[r][c] = 0;\n\n      cell.innerText = '';\n      cell.classList.value = '';\n      cell.classList.add('field-cell');\n    }\n  }\n  scoreCount = 0;\n  score.innerHTML = scoreCount;\n};\n\nconst setCell = () => {\n  if (!hasEmptyCell()) {\n    return;\n  }\n\n  let found = false;\n  const number = Math.random() < 0.8 ? 2 : 4;\n\n  while (!found) {\n    const row = Math.floor(Math.random() * rows);\n    const column = Math.floor(Math.random() * columns);\n\n    if (board[row][column] === 0) {\n      board[row][column] = number;\n\n      const cell = document.getElementById(`row_${row}-column_${column}`);\n\n      cell.innerText = `${number}`;\n      cell.classList.add(`field-cell--${number}`);\n      found = true;\n    }\n  }\n\n  if (loseGame()) {\n    messageLose.classList.remove('hidden');\n\n    button.addEventListener('click', () => {\n      messageLose.classList.add('hidden');\n\n      clearBoard();\n      restartGame();\n    });\n  }\n};\n\nconst updateCell = (cell, number) => {\n  cell.innerText = '';\n  cell.classList.value = '';\n  cell.classList.add('field-cell');\n\n  if (number > 0) {\n    cell.innerText = number;\n\n    if (number < 4096) {\n      cell.classList.add(`field-cell--${number}`);\n    } else {\n      cell.classList.add(`field-cell--8192`);\n    }\n  }\n\n  if (number === WINNER_SCORE) {\n    messageWin.classList.remove('hidden');\n    won = true;\n  }\n};\n\ndocument.addEventListener('keyup', arrow => {\n  arrow.preventDefault();\n\n  if (won) {\n    return;\n  }\n\n  switch (arrow.key) {\n    case ARROW.LEFT:\n      slideLeft();\n      break;\n    case ARROW.RIGHT:\n      slideRight();\n      break;\n    case ARROW.UP:\n      slideUp();\n      break;\n    case ARROW.DOWN:\n      slideDown();\n      break;\n    default:\n      return;\n  }\n\n  document.querySelector('.game-score').innerText = scoreCount;\n});\n\nconst filterZero = row => row.filter(num => num !== 0);\n\nconst slide = (row) => {\n  let initialRow = [...row];\n\n  initialRow = filterZero(initialRow);\n\n  for (let i = 0; i < initialRow.length - 1; i++) {\n    if (initialRow[i] === initialRow[i + 1]) {\n      initialRow[i] *= 2;\n      initialRow[i + 1] = 0;\n      scoreCount += initialRow[i];\n    }\n  }\n\n  initialRow = filterZero(initialRow);\n\n  while (initialRow.length < columns) {\n    initialRow.push(0);\n  }\n\n  return initialRow;\n};\n\nconst slideHorizontal = (row, direction) => {\n  let newRow = [...row];\n\n  if (direction === 'right') {\n    newRow.reverse();\n  }\n\n  newRow = filterZero(newRow);\n\n  for (let i = 0; i < newRow.length - 1; i++) {\n    if (newRow[i] === newRow[i + 1]) {\n      newRow[i] *= 2;\n      newRow[i + 1] = 0;\n      scoreCount += newRow[i];\n    }\n  }\n\n  newRow = filterZero(newRow);\n\n  while (newRow.length < columns) {\n    newRow.push(0);\n  }\n\n  if (direction === 'right') {\n    newRow.reverse();\n  }\n\n  return newRow;\n};\n\nconst slideLeft = () => {\n  for (let r = 0; r < rows; r++) {\n    const row = board[r];\n    const newRow = slideHorizontal(row, 'left');\n\n    board[r] = newRow;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(`row_${r}-column_${c}`);\n      const number = board[r][c];\n\n      updateCell(cell, number);\n    }\n  }\n\n  if (hasChanges(initialBoard, board)) {\n    setCell();\n  }\n};\n\nconst slideRight = () => {\n  for (let r = 0; r < rows; r++) {\n    const row = board[r];\n    const newRow = slideHorizontal(row, 'right');\n\n    board[r] = newRow;\n\n    for (let c = 0; c < columns; c++) {\n      const cell = document.getElementById(`row_${r}-column_${c}`);\n      const number = board[r][c];\n\n      updateCell(cell, number);\n    }\n  }\n\n  if (hasChanges(initialBoard, board)) {\n    setCell();\n  }\n};\n\nconst slideUp = () => {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(`row_${r}-column_${c}`);\n      const number = board[r][c];\n\n      updateCell(cell, number);\n    }\n  }\n\n  if (hasChanges(initialBoard, board)) {\n    setCell();\n  }\n};\n\nconst slideDown = () => {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const cell = document.getElementById(`row_${r}-column_${c}`);\n      const number = board[r][c];\n\n      updateCell(cell, number);\n    }\n  }\n\n  if (hasChanges(initialBoard, board)) {\n    setCell();\n  }\n};\n\nconst hasChanges = (arrayA, arrayB) => {\n  for (let i = 0; i < arrayA.length; i++) {\n    for (let j = 0; j < arrayA[i].length; j++) {\n      if (arrayA[i][j] !== arrayB[i][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nbutton.removeEventListener('click', restartGame);\n\nfunction restartGame() {\n  messageWin.classList.add('hidden');\n  won = false;\n  clearBoard();\n  setGame();\n}\n\nbutton.addEventListener('click', () => {\n  if (isInitialSetup) {\n    messageStart.classList.add('hidden');\n    button.innerText = 'Restart';\n    button.classList.replace('start', 'restart');\n\n    setGame();\n    isInitialSetup = false;\n  } else {\n    messageWin.classList.add('hidden');\n    won = false;\n    clearBoard();\n    setGame();\n  }\n}\n);\n"]}